#pragma checksum "d:\net\WebApplication1\Views\Product\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ee2bdc9f269d30c590f53511bc4b1b10c0572da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Index), @"mvc.1.0.view", @"/Views/Product/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "d:\net\WebApplication1\Views\Product\Index.cshtml"
using WebApplication1.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ee2bdc9f269d30c590f53511bc4b1b10c0572da", @"/Views/Product/Index.cshtml")]
    public class Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IList<Product>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 5 "d:\net\WebApplication1\Views\Product\Index.cshtml"
  
    Layout = "~/Views/Shared/Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script type=""text/javascript"">

    async function SendReq(url, body) {
        return await fetch(url, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: body
        });
    }

    function GetDataForm(DomItem) {
        let formData = new FormData(document.getElementById(DomItem));
        let object = {};
        formData.forEach(function (value, key) {
            object[key] = value;
        });

        return object;
    }

    $(document).ready(function () {

        $(""input[type='button']"").each(function () {
            $(this).click(function () {
                (async () => {
                    const rawResponse = await SendReq('https://localhost:44387/product/drop',
                        JSON.stringify({ id: this.id, page: window.location.href.split('/').pop() }))
                    const redirectUrl = await rawResponse.json();");
            WriteLiteral(@"
                    window.location.replace(redirectUrl);
                })();
            });
        });

        $(function () {
            var submitButton = $(""#productForm button[type='submit']"").attr(""disabled"", true);
            $(""#productForm input.required"").change(function () {
                var valid = true;
                $.each($(""#productForm input.required""), function (index, value) {

                    if (!$(value).val()) {
                        valid = false;
                    }
                });
                if (valid) {
                    $(submitButton).attr(""disabled"", false);
                    console.log(""valid"");
                }
                else {
                    $(submitButton).attr(""disabled"", true);
                }
            });
        });


        $(""#productForm"").submit(function (e) {
            e.preventDefault();

            let object = GetDataForm(""productForm"");
            object.page = window.location.");
            WriteLiteral(@"href.split('/').pop();
            var json = JSON.stringify(object);

            (async () => {
                const rawResponse = await SendReq('https://localhost:44387/product/add', json);
                const redirectUrl = await rawResponse.json();
                window.location.replace(redirectUrl);
            })();

        });

        $('#editProduct').on('change', function () {
            $(""#fn"").show();

            var id = this.value;

            (async () => {
                const rawResponse = await SendReq('https://localhost:44387/product/geteditproduct', JSON.stringify({ id: id }));
                const editProduct = await rawResponse.json();

                $(""#edprodName"").val(editProduct.result.name);
                $(""#edprodDescription"").val(editProduct.result.description);


                $(""#productEditForm"").submit(function (e) {
                    e.preventDefault();

                    if ($(""#edprodName"").val().length === 0 &&
            ");
            WriteLiteral(@"            $(""#edprodDescription"").val().length === 0) {
                        alert(""Упс, поля пустые"");
                        return;
                    }

                    let object = GetDataForm(""productEditForm"");
                    object.id = id;
                    object.page = window.location.href.split('/').pop();
                    var json = JSON.stringify(object);

                    (async () => {
                        const rawResponse = await SendReq('https://localhost:44387/product/update', json);
                        const redirectUrl = await rawResponse.json();
                        window.location.replace(redirectUrl);
                    })();

                });

            })();

        });

        $('#cancel').on('click', function () {
            window.location.href = `https://localhost:44387/product/index/${window.location.href.split('/').pop()}`;
        });

    });

</script>

<div class=""main_container"">


    <h2>Полный ");
            WriteLiteral("список товаров</h2>\r\n\r\n    <table>\r\n        <tr>\r\n            <th>Наименование товара</th>\r\n            <th>Описание</th>\r\n        </tr>\r\n");
#nullable restore
#line 138 "d:\net\WebApplication1\Views\Product\Index.cshtml"
         foreach (var item in Model)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\r\n                <td>\r\n                    ");
#nullable restore
#line 142 "d:\net\WebApplication1\Views\Product\Index.cshtml"
               Write(item.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");
#nullable restore
#line 145 "d:\net\WebApplication1\Views\Product\Index.cshtml"
               Write(item.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    <input type=\"button\"");
            BeginWriteAttribute("id", " id=\"", 4635, "\"", 4648, 1);
#nullable restore
#line 148 "d:\net\WebApplication1\Views\Product\Index.cshtml"
WriteAttributeValue("", 4640, item.Id, 4640, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" value=\"Удалить\" />\r\n                </td>\r\n            </tr>\r\n");
#nullable restore
#line 151 "d:\net\WebApplication1\Views\Product\Index.cshtml"

        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </table>


    <h2>Добавить товар</h2>

    <div class=""form-container"">
        <form id=""productForm"">
            <label for=""fname"">Наименнования товара</label>
            <input type=""text"" id=""name"" name=""ProductName"" placeholder=""Введите Наименнования.."" class=""required"">
            <br>
            <br>
            <label for=""lname"">Описание</label>
            <input type=""text"" id=""description"" name=""ProductDescription"" placeholder=""Введите описание.."" class=""required"">
            <br>
            <br>
            <button type=""submit"">Добавить</button>
        </form>
    </div>

    <br>
    <br>

    <div class=""editProduct_container"">
        <h2>Изменить товар</h2>
        <br>
        ");
#nullable restore
#line 178 "d:\net\WebApplication1\Views\Product\Index.cshtml"
   Write(Html.DropDownList("editProduct", selectList: new SelectList(
                       Model, "Id", "Name"),
                            "Выберите товар"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    </div>

    <div id=""fn"" hidden>
        <form id=""productEditForm"">
            <br>
            <br>
            Наименование : <input id=""edprodName"" name=""editProdName"" type=""text"" />
            <br>
            <br>
            Описание: <input id=""edprodDescription"" name=""editProdDescription"" type=""text"" />
            <br>
            <br>
            <input type=""submit"" value=""Изменить"" />
            <input id=""cancel"" type=""button"" value=""Отмена"" />
        </form>
    </div>

</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IList<Product>> Html { get; private set; }
    }
}
#pragma warning restore 1591
